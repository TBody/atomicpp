==7842== Invalid write of size 8
==7842==    at 0x1000266F0: atomicpp::RateEquations::calculateChargeExchangePopulationEquation(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::pair<int, double> const&, std::pair<int, double> const&) (in ./Prad)
==7842==    by 0x100024078: atomicpp::RateEquations::computeDerivs(double, double, double, double, double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (in ./Prad)
==7842==    by 0x1000012E9: main (in ./Prad)
==7842==  Address 0x100e6cb50 is 0 bytes after a block of size 48 alloc'd
==7842==    at 0x10016D616: malloc (vg_replace_malloc.c:302)
==7842==    by 0x100184061: operator new(unsigned long) (in /opt/local/lib/libgcc/libstdc++.6.dylib)
==7842==    by 0x100001B42: std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) (in ./Prad)
==7842==    by 0x100018465: std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) (in ./Prad)
==7842==    by 0x100018872: std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) (in ./Prad)
==7842==    by 0x10001FAE2: std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) (in ./Prad)
==7842==    by 0x1000283CF: std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&) (in ./Prad)
==7842==    by 0x1000263D2: atomicpp::RateEquations::calculateChargeExchangePopulationEquation(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::pair<int, double> const&, std::pair<int, double> const&) (in ./Prad)
==7842==    by 0x100024078: atomicpp::RateEquations::computeDerivs(double, double, double, double, double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (in ./Prad)
==7842==    by 0x1000012E9: main (in ./Prad)